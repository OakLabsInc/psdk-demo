// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from com_verifone_commerce_payment.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <optional>
#include <psdk/export.h>
#include <string>

namespace verifone_sdk {

class Transaction;
class TransactionEventResponse;

/**
 * The listener interface for session events. More than one listener may be registered with a
 * session, but there must always be at least one listener.
 */
class PSDK_EXPORT TransactionEvent {
public:
    virtual ~TransactionEvent() {}

    /** A general transaction event notifying listeners that something has happened. */
    static std::string const TRANSACTION_NOTIFICATION;

    /** A general transaction event requesting information from listeners. */
    static std::string const TRANSACTION_REQUEST;

    /** The event type when a payment has started. */
    static std::string const TRANSACTION_PAYMENT_STARTED;

    /**
     * The event type when a payment requires online authorization.  An event with this type will
     * only be sent when the client is performing online authorization itself.
     */
    static std::string const TRANSACTION_PAYMENT_REQUIRES_ONLINE_AUTHORIZATION;

    /** The event type when a payment has been completed. */
    static std::string const TRANSACTION_PAYMENT_COMPLETED;

    /** The event type when an action has started for non-Payment types. */
    static std::string const TRANSACTION_STARTED;

    /** The event type when an action has ended for non-Payment types. */
    static std::string const TRANSACTION_ENDED;

    /** A general type when an error has occurred during the transaction. */
    static std::string const TRANSACTION_ERROR;

    /** The transaction has failed. It will need to be started again. */
    static std::string const TRANSACTION_FAILED;

    /** The login process is complete, check the status for the success/failure of the attempt. */
    static std::string const LOGIN_COMPLETED;

    /** The logout process is complete, check the status for the success/failure of the attempt */
    static std::string const LOGOUT_COMPLETED;

    /**
     * Sent in response to {@link TransactionManager#reprintReceipt(Payment, int, int, String)}. Only
     * this type and the status will always be provided, since it might not be attached to a session
     * or a transaction.
     */
    static std::string const RECEIPT_REPRINTED;

    /** The event type when receipt is printed. */
    static std::string const RECEIPT_PRINTED;

    /** Return message from event */
    virtual std::optional<std::string> getMessage() const = 0;

    /** Returns the session ID associated with this event, or null if detached from a session. */
    virtual std::optional<std::string> getSessionId() const = 0;

    /**
     * Returns the Transaction Event constants in addition to the {@link CommerceEvent CommerceEvent}
     * and {@link com.verifone.commerce.Status Status} constants. Overridden here only to
     * provide the appropriate documentation.
     */
    virtual std::optional<std::string> getType() const = 0;

    /** Return status */
    virtual int32_t getStatus() const = 0;

    /** Returns an optional event ID as copied from the originating event. */
    virtual std::optional<std::string> getEventId() const = 0;

    /** The invoice ID for the transaction. */
    virtual std::optional<std::string> getInvoiceId() const = 0;

    /**
     * The transaction object. Use {@link #updateTransaction(Transaction)} to apply any changes
     * for the transaction, or just update the transaction object returned by this method.
     */
    virtual std::shared_ptr<Transaction> getTransaction() const = 0;

    /** Return transaction event response */
    virtual std::shared_ptr<TransactionEventResponse> generateTransactionEventResponse() const = 0;
};

}  // namespace verifone_sdk
