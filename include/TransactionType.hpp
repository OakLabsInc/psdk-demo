// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from com_verifone_commerce_entities.djinni

#pragma once

#include <functional>
#include <string>

namespace verifone_sdk {

enum class TransactionType : int {
    /** A direct payment, attempting to collect the funds in full at once */
    PAYMENT,
    /** A refund for a specific payment */
    REFUND,
    /** Used to void a transaction */
    VOID_TYPE,
    /** Authorizes an amount to be completed at a later time */
    PRE_AUTHORIZATION,
    /** Completes a pre-authorisation */
    PRE_AUTHORIZATION_COMPLETION,
    /** Not currently supported. Begin or continue a deferred payment plan */
    DEFERRED_PAYMENT,
    /** Not currently supported. Finish a deferred payment plan */
    DEFERRED_PAYMENT_COMPLETION,
    /** Installment based payment plan */
    INSTALLMENT,
    /**
     * Deposit funds into an account.  This differs from refund in that the funds are
     * transferred (credited) immediately to the cardholder account, rather than upon settlement
     */
    DEPOSIT,
};

constexpr std::string_view toString(const TransactionType& arg) {
    switch(arg) {
        case TransactionType::PAYMENT: return "PAYMENT";
        case TransactionType::REFUND: return "REFUND";
        case TransactionType::VOID_TYPE: return "VOID_TYPE";
        case TransactionType::PRE_AUTHORIZATION: return "PRE_AUTHORIZATION";
        case TransactionType::PRE_AUTHORIZATION_COMPLETION: return "PRE_AUTHORIZATION_COMPLETION";
        case TransactionType::DEFERRED_PAYMENT: return "DEFERRED_PAYMENT";
        case TransactionType::DEFERRED_PAYMENT_COMPLETION: return "DEFERRED_PAYMENT_COMPLETION";
        case TransactionType::INSTALLMENT: return "INSTALLMENT";
        case TransactionType::DEPOSIT: return "DEPOSIT";
        default: return "TransactionType enum value not supported";
    }
}

}  // namespace verifone_sdk

namespace std {

template <>
struct hash<::verifone_sdk::TransactionType> {
    size_t operator()(::verifone_sdk::TransactionType type) const {
        return std::hash<int>()(static_cast<int>(type));
    }
};

}  // namespace std
