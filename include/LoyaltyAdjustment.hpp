// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from LoyaltyAdjustment.djinni

#pragma once

#include <memory>
#include <optional>
#include <psdk/export.h>
#include <string>
#include <vector>

namespace verifone_sdk {

class LoyaltyIdentifier;
class Offer;

/**
 * Contains the entire selection of adjustments that are valid for the current customer
 * using a specific Provider / Publisher.
 */
class PSDK_EXPORT LoyaltyAdjustment {
public:
    virtual ~LoyaltyAdjustment() {}

    /** create LoyaltyAdjustment */
    static std::shared_ptr<LoyaltyAdjustment> create();

    /** Publisher name. Identifies which platform is being used. */
    virtual std::optional<std::string> getPublisher() const = 0;

    /** Publisher identifier. Provider may elect to pass a numeric identifier for their platform. */
    virtual std::optional<std::string> getPublisherId() const = 0;

    /**
     * Array of Offers, see detailed description in {@link BasketAdjustmentRequest#getOffers()}.
     * @see BasketAdjustmentRequest#getOffers()
     */
    virtual std::vector<std::shared_ptr<Offer>> getLoyaltyOffers() const = 0;

    /**
     * The underlying list of offers.
     * @see #getLoyaltyOffers()
     */
    virtual std::vector<std::shared_ptr<LoyaltyIdentifier>> getLoyaltyIdentifiers() const = 0;

    /** RFU */
    virtual std::optional<std::string> getQrCodeString() const = 0;

    /** Sets the publisher name. This is required when creating a loyalty adjustment. */
    virtual void setPublisher(const std::optional<std::string> & publisher) = 0;

    /** Sets the publisher ID. */
    virtual void setPublisherId(const std::optional<std::string> & publisherId) = 0;

    /**
     * Set qr code string.
     * @see #getQrCodeString()
     */
    virtual void setQrCodeString(const std::optional<std::string> & qrCodeString) = 0;

    /**
     * Adds an offer.
     * @see #getLoyaltyOffers()
     */
    virtual void addLoyaltyOffer(const std::shared_ptr<Offer> & offer) = 0;

    /**
     * Adds list of offers.
     * @see #getLoyaltyOffers()
     */
    virtual void addLoyaltyOffers(const std::vector<std::shared_ptr<Offer>> & offers) = 0;

    /**
     * Removes an offer from the list if it is present.
     * @see #getLoyaltyOffers()
     */
    virtual void removeLoyaltyOffer(const std::shared_ptr<Offer> & offer) = 0;

    /**
     * Adds a LoyaltyIdentifier. At least one is required when creating a loyalty adjustment.
     * @see #getLoyaltyIdentifiers()
     */
    virtual void addLoyaltyIdentifier(const std::shared_ptr<LoyaltyIdentifier> & loyaltyIdentifier) = 0;

    /**
     * Adds list of Loyalty identifiers.
     * @see #getLoyaltyIdentifiers()
     */
    virtual void addLoyaltyIdentifiers(const std::vector<std::shared_ptr<LoyaltyIdentifier>> & loyaltyIdentifiers) = 0;

    /**
     * Removes an LoyaltyIdentifier from the list if it is present.
     * @see #getLoyaltyIdentifiers()
     */
    virtual void removeLoyaltyIdentifier(const std::shared_ptr<LoyaltyIdentifier> & loyaltyIdentifier) = 0;
};

}  // namespace verifone_sdk
