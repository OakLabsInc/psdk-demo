// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from com_verifone_commerce_entities.djinni

#pragma once

#include <memory>
#include <optional>
#include <string>

namespace verifone_sdk {

struct Decimal;

/**
 * This represents the data that is shared between the terminal and
 * the application while processing CP Triggers.
 * Setting the fields is only relevant when sending the data to the terminal,
 * and conversely, getting the fields is only relevant when receiving this
 * object from the terminal.
 */
class AmountAdjustment {
public:
    virtual ~AmountAdjustment() {}

    static std::shared_ptr<AmountAdjustment> create();

    /**
     * boolean which indicates whether the percentage or value of the total
     * should be used for adjustment.
     */
    virtual bool shouldUsePercentageForAdjustment() const = 0;

    /**
     * Refer to {@link #setAdjustmentValue(BigDecimal) setAdjustmentValue(
     * BigDecimal)}.
     */
    virtual std::optional<Decimal> getAdjustmentValue() const = 0;

    /**
     * Refer to the {@link #setAdjustmentPercentage(BigDecimal)
     * setAdjustmentPercentage(BigDecimal)}.
     */
    virtual std::optional<Decimal> getAdjustmentPercentage() const = 0;

    /** Refer to {@link #setDescription(String) setDescription(String)}. */
    virtual std::optional<std::string> getDescription() const = 0;

    /**
     * Set the amount to adjust the total as a GAAP-standard
     * BigDecimal.
     * Can be positive or negative. Either this or
     * adjustmentPercentage is required,
     * setting one will overwrite the other if both are set. Can be
     * set to null to remove this adjustment.
     */
    virtual void setAdjustmentValue(const std::optional<Decimal> & value) = 0;

    /**
     * The percentage to adjust the total as a GAAP-standard
     * BigDecimal.
     * Can be positive or negative. Either this or adjustmentValue is
     * required,
     * setting one will overwrite the other if both are set. Can be
     * set to null to remove this adjustment.
     */
    virtual void setAdjustmentPercentage(const std::optional<Decimal> & percentage) = 0;

    /** A short description of the adjustment. This is optional. */
    virtual void setDescription(const std::optional<std::string> & description) = 0;
};

}  // namespace verifone_sdk
