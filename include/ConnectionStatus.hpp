// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ConnectionInterface.djinni

#pragma once

#include <functional>
#include <string>

namespace verifone_sdk {

enum class ConnectionStatus : int {
    /** Default */
    UNAVAILABLE,
    /**
     * Indicates that this device is detected and available for connection, 
     * but not connected.
     */
    AVAILABLE,
    /** The connection object is disconnected. */
    DISCONNECTED,
    /** Transitioning from disconnected to connected. */
    CONNECTING,
    /** The connection is now ready to read/write. */
    CONNECTED,
    /**
     * Transitioning from connected to disconnected. This should only happen 
     * when intentionally disconnecting, i.e., when 
     * {@link ConnectionInterface#finished} is called. In cases where a connection 
     * is suddenly lost, the connection status should change directly from 
     * CONNECTED to DISCONNECTED without this intermediate state.
     */
    DISCONNECTING,
    /**
     * A general error occurred which can't be handled by some other 
     * status/mechanism. This should rarely be used.
     */
    UNKNOWN_ERROR,
};

constexpr std::string_view toString(const ConnectionStatus& arg) {
    switch(arg) {
        case ConnectionStatus::UNAVAILABLE: return "UNAVAILABLE";
        case ConnectionStatus::AVAILABLE: return "AVAILABLE";
        case ConnectionStatus::DISCONNECTED: return "DISCONNECTED";
        case ConnectionStatus::CONNECTING: return "CONNECTING";
        case ConnectionStatus::CONNECTED: return "CONNECTED";
        case ConnectionStatus::DISCONNECTING: return "DISCONNECTING";
        case ConnectionStatus::UNKNOWN_ERROR: return "UNKNOWN_ERROR";
        default: return "ConnectionStatus enum value not supported";
    }
}

}  // namespace verifone_sdk

namespace std {

template <>
struct hash<::verifone_sdk::ConnectionStatus> {
    size_t operator()(::verifone_sdk::ConnectionStatus type) const {
        return std::hash<int>()(static_cast<int>(type));
    }
};

}  // namespace std
