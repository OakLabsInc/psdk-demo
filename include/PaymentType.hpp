// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from Payment.djinni

#pragma once

#include <functional>
#include <string>

namespace verifone_sdk {

enum class PaymentType : int {
    /** Cash was used to fund this payment */
    CASH,
    /** A credit account was used to fund this payment */
    CREDIT,
    /** A debit account was used to fund this payment */
    DEBIT,
    /** A recognized stored value card */
    STORED_VALUE,
    /**
     * Generally a US-specific welfare payment system, but also covers
     * similar types in other regions.
     */
    EBT,
    /**
     * An alternate account type was used to fund this payment, generally
     * some kind of custom stored value account.
     */
    ALTERNATE_TYPE,
    /** A check was used for payment */
    CHECK,
    /** Operator account accessed by a mobile phone */
    MOBILE,
};

constexpr std::string_view toString(const PaymentType& arg) {
    switch(arg) {
        case PaymentType::CASH: return "CASH";
        case PaymentType::CREDIT: return "CREDIT";
        case PaymentType::DEBIT: return "DEBIT";
        case PaymentType::STORED_VALUE: return "STORED_VALUE";
        case PaymentType::EBT: return "EBT";
        case PaymentType::ALTERNATE_TYPE: return "ALTERNATE_TYPE";
        case PaymentType::CHECK: return "CHECK";
        case PaymentType::MOBILE: return "MOBILE";
        default: return "PaymentType enum value not supported";
    }
}

}  // namespace verifone_sdk

namespace std {

template <>
struct hash<::verifone_sdk::PaymentType> {
    size_t operator()(::verifone_sdk::PaymentType type) const {
        return std::hash<int>()(static_cast<int>(type));
    }
};

}  // namespace std
