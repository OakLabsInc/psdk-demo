// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from com_verifone_commerce.djinni

#pragma once

#include <memory>
#include <psdk/export.h>

namespace verifone_sdk {

class AmountAdjustedEvent;
class BasketAdjustedEvent;
class BasketEvent;
class CardInformationReceivedEvent;
class CommerceEvent;
class DeviceManagementEvent;
class DeviceVitalsInformationEvent;
class HostAuthorizationEvent;
class HostFinalizeTransactionEvent;
class LoyaltyReceivedEvent;
class NotificationEvent;
class PaymentCompletedEvent;
class PinEvent;
class PrintEvent;
class ReceiptDeliveryMethodEvent;
class ReconciliationEvent;
class ReconciliationsListEvent;
class Status;
class StoredValueCardEvent;
class TransactionEvent;
class TransactionQueryEvent;
class UserInputEvent;

/**
 * The New listener interface for session events, Login and handling the PaymentSdk initialization/Teardown.
 * There must always be at least one listener.
 */
class PSDK_EXPORT CommerceListener2 {
public:
    virtual ~CommerceListener2() {}

    /** Handle CommerceEvent */
    virtual void handleCommerceEvent(const std::shared_ptr<CommerceEvent> & event) = 0;

    /** Handle TransactionEvent */
    virtual void handleTransactionEvent(const std::shared_ptr<TransactionEvent> & event) = 0;

    /** Handle AmountAdjustedEvent */
    virtual void handleAmountAdjustedEvent(const std::shared_ptr<AmountAdjustedEvent> & event) = 0;

    /** Handle BasketAdjustedEvent */
    virtual void handleBasketAdjustedEvent(const std::shared_ptr<BasketAdjustedEvent> & event) = 0;

    /** Handle BasketEvent */
    virtual void handleBasketEvent(const std::shared_ptr<BasketEvent> & event) = 0;

    /** Handle CardInformationReceivedEvent */
    virtual void handleCardInformationReceivedEvent(const std::shared_ptr<CardInformationReceivedEvent> & event) = 0;

    /** Handle DeviceManagementEvent */
    virtual void handleDeviceManagementEvent(const std::shared_ptr<DeviceManagementEvent> & event) = 0;

    /** Handle LoyaltyReceivedEvent */
    virtual void handleLoyaltyReceivedEvent(const std::shared_ptr<LoyaltyReceivedEvent> & event) = 0;

    /** Handle PaymentCompletedEvent */
    virtual void handlePaymentCompletedEvent(const std::shared_ptr<PaymentCompletedEvent> & event) = 0;

    /** Handle ReceiptDeliveryMethodEvent */
    virtual void handleReceiptDeliveryMethodEvent(const std::shared_ptr<ReceiptDeliveryMethodEvent> & event) = 0;

    /** Handle StoredValueCardEvent */
    virtual void handleStoredValueCardEvent(const std::shared_ptr<StoredValueCardEvent> & event) = 0;

    /** Handle UserInputEvent */
    virtual void handleUserInputEvent(const std::shared_ptr<UserInputEvent> & event) = 0;

    /** Handle ReconciliationEvent */
    virtual void handleReconciliationEvent(const std::shared_ptr<ReconciliationEvent> & event) = 0;

    /** Handle ReconciliationsListEvent */
    virtual void handleReconciliationsListEvent(const std::shared_ptr<ReconciliationsListEvent> & event) = 0;

    /** Handle TransactionQueryEvent */
    virtual void handleTransactionQueryEvent(const std::shared_ptr<TransactionQueryEvent> & event) = 0;

    /** Handle HostAuthorizationEvent */
    virtual void handleHostAuthorizationEvent(const std::shared_ptr<HostAuthorizationEvent> & event) = 0;

    /** Handle HostFinalizeTransactionEvent */
    virtual void handleHostFinalizeTransactionEvent(const std::shared_ptr<HostFinalizeTransactionEvent> & event) = 0;

    /** Handle NotificationEvent */
    virtual void handleNotificationEvent(const std::shared_ptr<NotificationEvent> & event) = 0;

    /** Handle PrintEvent */
    virtual void handlePrintEvent(const std::shared_ptr<PrintEvent> & event) = 0;

    /** Handle Initialization/TearDown Status */
    virtual void handleStatus(const std::shared_ptr<Status> & status) = 0;

    /** Handle DeviceVitalsInformationEvent */
    virtual void handleDeviceVitalsInformationEvent(const std::shared_ptr<DeviceVitalsInformationEvent> & event) = 0;

    /** Handle PinEvent */
    virtual void handlePinEvent(const std::shared_ptr<PinEvent> & event) = 0;
};

}  // namespace verifone_sdk
