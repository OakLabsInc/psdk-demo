// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from LoyaltyIdentifier.djinni

#pragma once

#include <memory>
#include <optional>
#include <psdk/export.h>
#include <string>
#include <vector>

namespace verifone_sdk {

/**
 * This represents the data that is shared between the terminal and the Android application.
 * Setting the fields is only relevant when sending the data to the terminal, and conversely,
 * getting the fields is only relevant when receiving this object from the terminal.
 */
class PSDK_EXPORT LoyaltyIdentifier {
public:
    virtual ~LoyaltyIdentifier() {}

    /** Create LoyaltyIdentifier */
    static std::shared_ptr<LoyaltyIdentifier> create();

    /** Unique reference to identify the Loyalty Program. */
    virtual std::optional<std::string> getProgramId() const = 0;

    /** Loyalty IDs for this customer in the associated program. At least one is required. */
    virtual std::vector<std::string> getCustomerLoyaltyId() const = 0;

    /** Available in NFC phone tap. An alternate to Loyalty Id. This is optional. */
    virtual std::optional<std::string> getCustomerPhoneNumber() const = 0;

    /** The name of the customer. This is optional. */
    virtual std::optional<std::string> getCustomerName() const = 0;

    /** The email address of the customer. This is optional. */
    virtual std::optional<std::string> getCustomerEmail() const = 0;

    /**
     * The number of points available to the customer after the matching offer is applied.
     * This is optional.
     */
    virtual std::optional<std::string> getLoyaltyPointsBalance() const = 0;

    /**
     * Some loyalty providers may only pass through to the POS their encrypted data set. This
     * allows a loyalty provider to include their own proprietary fields to parse on the POS side.
     * This is optional.
     */
    virtual std::optional<std::string> getLoyaltyPayload() const = 0;

    /** Unique to the phone for customer tracking purposes. This is optional. */
    virtual std::optional<std::string> getConsumerId() const = 0;

    /**
     * Set program ID
     * @see #getProgramId()
     */
    virtual void setProgramId(const std::optional<std::string> & programId) = 0;

    /**
     * Set customer loyalty IDs
     * @see #getCustomerLoyaltyId()
     */
    virtual void setCustomerLoyaltyId(const std::vector<std::string> & customerLoyaltyId) = 0;

    /**
     * Set customer phone number
     * @see #getCustomerPhoneNumber()
     */
    virtual void setCustomerPhoneNumber(const std::optional<std::string> & customerPhoneNumber) = 0;

    /**
     * Set customer name
     * @see #getCustomerName()
     */
    virtual void setCustomerName(const std::optional<std::string> & customerName) = 0;

    /**
     * Set customer email
     * @see #getCustomerEmail()
     */
    virtual void setCustomerEmail(const std::optional<std::string> & customerEmail) = 0;

    /**
     * Set loyalty points balance
     * @see #getLoyaltyPointsBalance()
     */
    virtual void setLoyaltyPointsBalance(const std::optional<std::string> & loyaltyPointsBalance) = 0;

    /**
     * Set loyalty payload
     * @see #getLoyaltyPayload()
     */
    virtual void setLoyaltyPayload(const std::optional<std::string> & loyaltyPayload) = 0;

    /**
     * Set consumer ID
     * @see #getConsumerId()
     */
    virtual void setConsumerId(const std::optional<std::string> & consumerId) = 0;
};

}  // namespace verifone_sdk
