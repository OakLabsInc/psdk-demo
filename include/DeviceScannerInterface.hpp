// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from psdk_internal.djinni

#pragma once

#include <memory>
#include <psdk/export.h>
#include <string>
#include <unordered_map>

namespace verifone_sdk {

class DeviceScanListenerInterface;
class PaymentSdkInterface;

/** Implements network scanning to discover Verifone devices. */
class PSDK_EXPORT DeviceScannerInterface {
public:
    virtual ~DeviceScannerInterface() {}

    static std::shared_ptr<DeviceScannerInterface> Create(const std::shared_ptr<PaymentSdkInterface> & payment_sdk);

    /**
     * Returns true if we're only looking for one specific device on the network.
     * This generally happens because we're already paired with a device, or we're 
     * configured to communicate with one specific device.
     */
    virtual bool IsFindingOneDevice() const = 0;

    /**
     * Set to true if the IP address is provided by the POS or through a fixed 
     * configuration, instead of dynamically discovered.
     */
    virtual void SetIpAddressConfirmed(bool is_ip_address_confirmed) = 0;

    /**
     * Start the scan. The config can contain details such as the serial number / ID of the device,
     * as well as the connection type. Right now, the connection type is assumed to be network, and 
     * no other connection types are supported for this scan, but maybe in the future?
     */
    virtual void StartScan(const std::shared_ptr<DeviceScanListenerInterface> & listener, const std::unordered_map<std::string, std::string> & config) = 0;

    /** End the current scan. Does nothing if a scan isn't currently running. */
    virtual void EndScan() = 0;
};

}  // namespace verifone_sdk
