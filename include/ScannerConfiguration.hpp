// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from peripherals.djinni

#pragma once

#include <psdk/export.h>
#include <string>

namespace verifone_sdk {

class PSDK_EXPORT ScannerConfiguration {
public:
    virtual ~ScannerConfiguration() {}

    /** The peripheral type used in {@link Peripheral#getPeripheralType()} getType()} and */
    static std::string const PERIPHERAL_TYPE;

    /**
     * An external scanner that is waiting to be activated, but is connected. This only applies to
     * scanners that have a suspend/sleep mode, and is specific to the scanner hardware.
     */
    static std::string const STATUS_SUSPENDED;

    /**
     * The scanner is looking for barcodes. As an example, in the case of the built-in camera, the
     * camera is actively scanning the view area.
     */
    static std::string const STATUS_SCANNING;

    /** The peripheral is connected and ready for use. */
    static std::string const STATUS_READY;

    /**
     * The scanner has found a barcode, and will include the relevant mAttributes. This status is
     * never returned from getStatus, but can only be received by a listener.
     */
    static std::string const STATUS_BARCODE_DETECTED;

    /** Returns the barcode data as a String for a STATUS_BARCODE_DETECTED event. */
    static std::string const ATTRIBUTE_BARCODE;

    /** Returns the detected barcode format as an Integer for a STATUS_BARCODE_DETECTED event. */
    static std::string const ATTRIBUTE_BARCODE_FORMAT;

    /** Use this attribute to enable/disable continuous scanning by setting it to a Boolean value */
    static std::string const ATTRIBUTE_CONTINUOUS_SCAN;

    /**
     * Use this attribute to pass an Activity or Fragment which will contain the view from the
     * scanner.
     */
    static std::string const ATTRIBUTE_DISPLAY_FEED_PARENT;

    /** Use this attribute to pass a Rect object to limit the scanning area to a specific region. */
    static std::string const ATTRIBUTE_SCAN_AREA_LIMIT;

    /**
     * Use this attribute to enable/disable playing a sound when a barcode is scanned by setting it
     * to a Boolean value.
     */
    static std::string const ATTRIBUTE_PLAY_SOUND;

    /**
     * Use this attribute to set the direction of the scanner, and receive the direction of the
     * scanner for a STATUS_BARCODE_DETECTED event. When using for the camera, this is an Integer
     * with the following values: 1 - Rear facing, no option to change. 2 - Rear facing, but the
     * user can change direction. 3 - Forward facing, no option to change. 4 - Forward facing, but
     * the user can change direction.
     */
    static std::string const ATTRIBUTE_SET_DIRECTION;

    /** Use this attribute to enable/disable a light by setting it to a Boolean value. */
    static std::string const ATTRIBUTE_ACTIVATE_LIGHT;

    /**
     * Use this attribute to enable scanning of specific formats. Formats are declared
     * under ScannerBarcodeFormat. Attribute value is an integer array.
     * If not set all product and industrial barcodes will be enabled by default.
     */
    static std::string const ATTRIBUTE_SCANNING_FORMATS;

    /**
     * The capability to continuously scan for barcodes and fire events for each barcode detected,
     * or only scan one barcode at a time.
     */
    static std::string const CAPABILITY_CONTINUOUS_SCANNING;

    /**
     * The capability to display in Android the view of the scanner. Generally only applicable to
     * the built-in camera.
     */
    static std::string const CAPABILITY_DISPLAY_SCAN_FEED;

    /**
     * The capability to reduce the scan area to a smaller subset of valid ranges. Generally only
     * applicable to the built-in camera.
     */
    static std::string const CAPABILITY_LIMIT_SCAN_AREA;

    /** The capability to set viewfinder's gravity. */
    static std::string const ATTRIBUTE_VIEW_GRAVITY;

    /** The capability to play a sound or chime when a barcode is scanned. */
    static std::string const CAPABILITY_PLAY_SCAN_SOUND;

    /**
     * The capability to set the direction of the scanner. Generally only applicable to the built-in
     * camera to switch between rear and forward facing.
     */
    static std::string const CAPABILITY_SET_SCAN_DIRECTION;

    /**
     * The capability to turn on a light for the scanning area. Generally only applicable to the
     * built-in camera.
     */
    static std::string const CAPABILITY_ACTIVATE_LIGHT;
};

}  // namespace verifone_sdk
