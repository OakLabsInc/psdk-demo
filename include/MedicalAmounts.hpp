// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from MedicalAmounts.djinni

#pragma once

#include <memory>
#include <optional>
#include <psdk/export.h>

namespace verifone_sdk {

struct Decimal;

/** A container for the various MedicalAmounts. */
class PSDK_EXPORT MedicalAmounts {
public:
    virtual ~MedicalAmounts() {}

    /** Create a MedicalAmounts object. */
    static std::shared_ptr<MedicalAmounts> create();

    /** Returns the health care amount if set, otherwise returns null. */
    virtual std::optional<Decimal> getAmountHealthCare() const = 0;

    /** Returns the prescription amount if set, otherwise returns null. */
    virtual std::optional<Decimal> getAmountPrescription() const = 0;

    /** Returns the vision amount if set, otherwise returns null. */
    virtual std::optional<Decimal> getAmountVision() const = 0;

    /** Returns the clinic amount if set, otherwise returns null. */
    virtual std::optional<Decimal> getAmountClinic() const = 0;

    /** Returns the dental amount if set, otherwise returns null. */
    virtual std::optional<Decimal> getAmountDental() const = 0;

    /** Set all of the medical amounts at once, overriding any previous setting. */
    virtual void setWithMedicalAmounts(const std::optional<Decimal> & amountHealthcare, const std::optional<Decimal> & amountPrescription, const std::optional<Decimal> & amountVision, const std::optional<Decimal> & amountClinic, const std::optional<Decimal> & amountDental) = 0;

    /** Sets the health care amount. This could be total of all the other medical amounts. */
    virtual void setAmountHealthCare(const std::optional<Decimal> & amountHealthcare) = 0;

    /** Sets the prescription amount. */
    virtual void setAmountPrescription(const std::optional<Decimal> & amountPrescription) = 0;

    /** Sets the vision amount. */
    virtual void setAmountVision(const std::optional<Decimal> & amountVision) = 0;

    /** Set the clinic amount. */
    virtual void setAmountClinic(const std::optional<Decimal> & amountClinic) = 0;

    /** Set the dental amount. */
    virtual void setAmountDental(const std::optional<Decimal> & amountDental) = 0;
};

}  // namespace verifone_sdk
