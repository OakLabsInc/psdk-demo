// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from com_verifone_commerce_entities.djinni

#pragma once

#include <functional>
#include <string>

namespace verifone_sdk {

enum class NotificationType : int {
    WAITING_FOR_CARD,
    CARD_PRESENTED,
    CARD_PROCESSING,
    REMOVE_CARD,
    CARD_REMOVED,
    /** The communication with the host has started and is now in progress. */
    HOST_STARTING,
    /** A stage during EMV processing */
    PERFORMING_RISK_MANAGEMENT,
    HOST_RESPONSE_RECEIVED,
    PRINTING_CASHIER_RECEIPT,
    PRINTING_CUSTOMER_RECEIPT,
    /** The payment application has requested some input from the customer and is currently waiting for their response. */
    WAITING_FOR_CUSTOMER_INPUT,
    /** The card has expired and the customer is prompted to retry. */
    CARD_EXPIRED_RETRY,
    /** The card presentation method must fallback to a different method and the customer is prompted to retry. */
    CARD_FALLBACK_RETRY,
    /** The card was unable to be read over NFC and the customer is prompted to retry. */
    CARD_BAD_READ_NFC_RETRY,
    /** The card was unable to be read when swiped and the customer is prompted to retry. */
    CARD_BAD_READ_SWIPE_RETRY,
    /** Some other type besides those listed above. Simply present the event message in this case. */
    OTHER,
};

constexpr std::string_view toString(const NotificationType& arg) {
    switch(arg) {
        case NotificationType::WAITING_FOR_CARD: return "WAITING_FOR_CARD";
        case NotificationType::CARD_PRESENTED: return "CARD_PRESENTED";
        case NotificationType::CARD_PROCESSING: return "CARD_PROCESSING";
        case NotificationType::REMOVE_CARD: return "REMOVE_CARD";
        case NotificationType::CARD_REMOVED: return "CARD_REMOVED";
        case NotificationType::HOST_STARTING: return "HOST_STARTING";
        case NotificationType::PERFORMING_RISK_MANAGEMENT: return "PERFORMING_RISK_MANAGEMENT";
        case NotificationType::HOST_RESPONSE_RECEIVED: return "HOST_RESPONSE_RECEIVED";
        case NotificationType::PRINTING_CASHIER_RECEIPT: return "PRINTING_CASHIER_RECEIPT";
        case NotificationType::PRINTING_CUSTOMER_RECEIPT: return "PRINTING_CUSTOMER_RECEIPT";
        case NotificationType::WAITING_FOR_CUSTOMER_INPUT: return "WAITING_FOR_CUSTOMER_INPUT";
        case NotificationType::CARD_EXPIRED_RETRY: return "CARD_EXPIRED_RETRY";
        case NotificationType::CARD_FALLBACK_RETRY: return "CARD_FALLBACK_RETRY";
        case NotificationType::CARD_BAD_READ_NFC_RETRY: return "CARD_BAD_READ_NFC_RETRY";
        case NotificationType::CARD_BAD_READ_SWIPE_RETRY: return "CARD_BAD_READ_SWIPE_RETRY";
        case NotificationType::OTHER: return "OTHER";
        default: return "NotificationType enum value not supported";
    }
}

}  // namespace verifone_sdk

namespace std {

template <>
struct hash<::verifone_sdk::NotificationType> {
    size_t operator()(::verifone_sdk::NotificationType type) const {
        return std::hash<int>()(static_cast<int>(type));
    }
};

}  // namespace std
