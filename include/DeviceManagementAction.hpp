// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from DeviceManagementCommand.djinni

#pragma once

#include <functional>
#include <string>

namespace verifone_sdk {

enum class DeviceManagementAction : int {
    /** Reboot the payment terminal. */
    REBOOT,
    /** Shutdown the payment terminal. */
    SHUTDOWN,
    /** Test the host connection. */
    TEST_HOST_CONNECTION,
    /** Request payment application to trigger a manual VHQ heartbeat. */
    TMS_MANUAL_HEARTBEAT,
    /** Only used when received from the device to identify an action that was not understood. */
    UNKNOWN,
    /**
     * For Verishield Crypto Library (VCL)/Verishield Protect
     * (VSP) Service this command
     * Advance the VCL master key
     * and provide a response in track1/track2
     * format and error codes if required.
     */
    VCL_ADVANCE_DDK,
    /**
     * Register device with VCL/VSP Service
     * and provide a response in track1/track2 format
     * and error codes if required.
     */
    VCL_REGISTRATION,
    /**
     * Instruct device to consume previously loaded VCL
     * BIN file and provide a response in track1/track2
     * format and error codes if required.
     */
    VCL_BIN_UPDATE,
    /** Commnand to retrieve current VSP configuration data. */
    VCL_RETRIEVE_VSP_CONFIG,
    /**
     * Placeholder for Device Management Event.
     * please use {@link com.verifone.payment_sdk.EncryptionRequest} to configure
     * the encryption object and
     * {@link com.verifone.payment_sdk.TransactionManager#performEncryption()}.
     */
    VCL_RETRIEVE_ENCRYPTED_MESSAGE,
    /** Request payment application to start change (manager) password flow. */
    VF_CHANGE_PASSWORD,
    /** Request payment application to start reset (manager) password flow. */
    VF_RESET_PASSWORD,
};

constexpr std::string_view toString(const DeviceManagementAction& arg) {
    switch(arg) {
        case DeviceManagementAction::REBOOT: return "REBOOT";
        case DeviceManagementAction::SHUTDOWN: return "SHUTDOWN";
        case DeviceManagementAction::TEST_HOST_CONNECTION: return "TEST_HOST_CONNECTION";
        case DeviceManagementAction::TMS_MANUAL_HEARTBEAT: return "TMS_MANUAL_HEARTBEAT";
        case DeviceManagementAction::UNKNOWN: return "UNKNOWN";
        case DeviceManagementAction::VCL_ADVANCE_DDK: return "VCL_ADVANCE_DDK";
        case DeviceManagementAction::VCL_REGISTRATION: return "VCL_REGISTRATION";
        case DeviceManagementAction::VCL_BIN_UPDATE: return "VCL_BIN_UPDATE";
        case DeviceManagementAction::VCL_RETRIEVE_VSP_CONFIG: return "VCL_RETRIEVE_VSP_CONFIG";
        case DeviceManagementAction::VCL_RETRIEVE_ENCRYPTED_MESSAGE: return "VCL_RETRIEVE_ENCRYPTED_MESSAGE";
        case DeviceManagementAction::VF_CHANGE_PASSWORD: return "VF_CHANGE_PASSWORD";
        case DeviceManagementAction::VF_RESET_PASSWORD: return "VF_RESET_PASSWORD";
        default: return "DeviceManagementAction enum value not supported";
    }
}

}  // namespace verifone_sdk

namespace std {

template <>
struct hash<::verifone_sdk::DeviceManagementAction> {
    size_t operator()(::verifone_sdk::DeviceManagementAction type) const {
        return std::hash<int>()(static_cast<int>(type));
    }
};

}  // namespace std
