// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from DeviceVitals.djinni

#pragma once

#include <cstdint>
#include <optional>
#include <psdk/export.h>
#include <string>

namespace verifone_sdk {

struct DeviceVitals;

class PSDK_EXPORT DeviceVitalsInformationEvent {
public:
    virtual ~DeviceVitalsInformationEvent() {}

    /** The event type */
    static std::string const TYPE;

    /**
     * A user-readable message.
     * This message may not be localized, in which case the type field should be used for
     * determining a localized message.
     */
    virtual std::optional<std::string> getMessage() const = 0;

    /** Get the session ID for the session which triggered this event. */
    virtual std::optional<std::string> getSessionId() const = 0;

    /**
     * The type of status. This will generally be SUCCESS for a status of 0, and contain a different
     * type for other errors.
     */
    virtual std::optional<std::string> getType() const = 0;

    /** Get the status for this particular event. A status of 0 means success, any other status is a failure. */
    virtual int32_t getStatus() const = 0;

    /** Returns an optional event ID as copied from the originating event. */
    virtual std::optional<std::string> getEventId() const = 0;

    /**
     * Returns the DeviceVitals
     * See {@link DeviceVitals}
     */
    virtual std::optional<DeviceVitals> getDeviceVitals() const = 0;
};

}  // namespace verifone_sdk
