// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from com_verifone_commerce_payment.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <optional>
#include <psdk/export.h>
#include <string>

namespace verifone_sdk {

class Transaction;
class TransactionEventResponse;
enum class DeliveryMethod;

/**
 * Contains the selected delivery method and, if relevant, the input value when asking the
 * customer to select from a list of receipt delivery options.
 */
class PSDK_EXPORT ReceiptDeliveryMethodEvent {
public:
    virtual ~ReceiptDeliveryMethodEvent() {}

    /** Receipt delivery method event type. */
    static std::string const TYPE;

    /**
     * A user-readable message.
     * This message may not be localized, in which case the type field should be used for
     * determining a localized message.
     */
    virtual std::optional<std::string> getMessage() const = 0;

    /** Get the session ID for the session which triggered this event. */
    virtual std::optional<std::string> getSessionId() const = 0;

    /**
     * The type of status. This will generally be SUCCESS for a status of 0, and contain a
     * different type for other errors. For example, in a refund or void, it is possible to
     * receive type TRANSACTION_NOT_FOUND. This may be used for localizing the specific
     * messages as needed
     */
    virtual std::optional<std::string> getType() const = 0;

    /**
     * Get the status for this particular event. A status of 0 means success,
     * any other status is a failure.
     */
    virtual int32_t getStatus() const = 0;

    /**
     * Returns the event ID associated with this event. Useful for matching the event received by
     * the listener to the original status returned when issuing the call, for example, calling
     * {@link com.verifone.commerce.payment.TransactionManager#reprintReceipt(Payment)} returns a
     * CommerceEvent containing an event ID, which will match the event ID received by the
     * CommerceListener when the receipt reprint is complete. 
     */
    virtual std::optional<std::string> getEventId() const = 0;

    /** The invoice ID for the transaction as a reference. */
    virtual std::optional<std::string> getInvoiceId() const = 0;

    /** The transaction associated with this event. */
    virtual std::shared_ptr<Transaction> getTransaction() const = 0;

    /**
     * Generate transaction event response for the current event.
     * @return empty response when a standard transaction event. Child classes may implement
     * appropriate responses as needed.
     */
    virtual std::shared_ptr<TransactionEventResponse> generateTransactionEventResponse() const = 0;

    /**
     * Get the delivery method as selected by the customer.
     * Refer to {@link com.verifone.commerce.entities.Receipt Receipt} for more information.
     */
    virtual DeliveryMethod getDeliveryMethod() const = 0;

    /** Get the phone number in the case of the SMS delivery method, or null otherwise. */
    virtual std::optional<std::string> getCustomerPhoneNumber() const = 0;

    /** Get the email address in the case of the EMAIL delivery method, or null otherwise */
    virtual std::optional<std::string> getCustomerEmail() const = 0;

    /** Check for delivery method has value of type EMAIL/SMS. */
    virtual bool hasValueForType() const = 0;
};

}  // namespace verifone_sdk
