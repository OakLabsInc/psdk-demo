// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from com_verifone_commerce_payment.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <optional>
#include <psdk/export.h>
#include <string>
#include <vector>

namespace verifone_sdk {

class BasketItem;
class Transaction;
class TransactionEventResponse;
enum class BasketAction;
enum class ItemType;

/** Fired when an item is added to the basket, modified, or removed from the basket. */
class PSDK_EXPORT BasketEvent {
public:
    virtual ~BasketEvent() {}

    /** The constant event type for basket. */
    static std::string const TYPE;

    /** Status methods */
    virtual std::optional<std::string> getMessage() const = 0;

    /** Get the session ID for the session which triggered this event. */
    virtual std::optional<std::string> getSessionId() const = 0;

    /** Returns the Event constants */
    virtual std::optional<std::string> getType() const = 0;

    /** Returns the event status */
    virtual int32_t getStatus() const = 0;

    /** CommerceEvent methods */
    virtual std::optional<std::string> getEventId() const = 0;

    /** Return invoice id from the event */
    virtual std::optional<std::string> getInvoiceId() const = 0;

    /** Returns Transaction from the event */
    virtual std::shared_ptr<Transaction> getTransaction() const = 0;

    /** TransactionEventResponse from the event */
    virtual std::shared_ptr<TransactionEventResponse> generateTransactionEventResponse() const = 0;

    /**
     * The action that triggered this event. The success/failure of the event should be
     * determined from {@link #getStatus()}.
     */
    virtual BasketAction getBasketAction() const = 0;

    /** The type of item for which the action was performed. */
    virtual ItemType getItemType() const = 0;

    /** A copy of the items for which the action was performed. */
    virtual std::vector<std::shared_ptr<BasketItem>> getBasketItems() const = 0;
};

}  // namespace verifone_sdk
