// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from DynamicCurrencyConversion.djinni

#pragma once

#include "Decimal.hpp"
#include <optional>
#include <psdk/export.h>
#include <string>
#include <utility>

namespace verifone_sdk {

/** If the currency was dynamically converted, returned to provide the information about the conversion. */
struct PSDK_EXPORT DynamicCurrencyConversion final {
    /** True if the customer approved the conversion */
    std::optional<bool> customerApproved;
    /** The amount in the converted currency */
    std::optional<Decimal> amount;
    /** The amount marked-up on the transaction for the conversion. */
    std::optional<Decimal> markup;
    /** The conversion rate used to perform the conversion. */
    std::optional<Decimal> conversionRate;
    /** The commission charged for converting the amount. */
    std::optional<Decimal> commission;
    /** The currency selected by the customer. */
    std::optional<std::string> customerCurrency;
    /** The declaration to be shown on the receipt. */
    std::optional<std::string> declaration;

    DynamicCurrencyConversion(std::optional<bool> customerApproved_,
                              std::optional<Decimal> amount_,
                              std::optional<Decimal> markup_,
                              std::optional<Decimal> conversionRate_,
                              std::optional<Decimal> commission_,
                              std::optional<std::string> customerCurrency_,
                              std::optional<std::string> declaration_)
    : customerApproved(std::move(customerApproved_))
    , amount(std::move(amount_))
    , markup(std::move(markup_))
    , conversionRate(std::move(conversionRate_))
    , commission(std::move(commission_))
    , customerCurrency(std::move(customerCurrency_))
    , declaration(std::move(declaration_))
    {}
};

}  // namespace verifone_sdk
